<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">
  <!--
     You can run this change log on your database as many times as you want, it will ignore the
     changes that are already applied. It also means that you can't modify an existing revision.
     Always add to the end.

     Use the maven goals: liquibase:update and liquibase:status
      Potentially with -Dliquibase.dropFirst=true
 -->
  <property name="uniqueid.size" value="22"/> <!-- size of a UUID is 36. Current key length is 22 -->
  <property name="userid.size" value="40"/>

  <changeSet id="rev-1" author="roug">
    <comment>Datasets - abstract group of editions</comment>

    <createTable tableName="datasets">
      <column name="datasetid" type="varchar(${uniqueid.size})">
        <constraints nullable="false" primaryKey="true"/>
      </column>
      <column name="title" type="varchar(255)"/>
      <column name="keep" type="int" remarks="Generations to keep of uploaded editions. NULL is infinite">
        <constraints nullable="true"/>
      </column>
      <column name="keepFailures" type="int" remarks="Generations to keep of uploaded editions with failed QA. NULL is infinite">
        <constraints nullable="true"/>
      </column>
      <column name="latestedition" type="varchar(${uniqueid.size})">
        <constraints nullable="false"/>
      </column>
      <column name="rdfconfiguration" type="text" remarks="The configuration for RDFExport"/>
    </createTable>

    <createTable tableName="editions">
      <column name="editionId" type="varchar(${uniqueid.size})">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="filename" type="varchar(255)">
        <constraints nullable="false"/>
      </column>
      <column name="uploader" type="varchar(${userid.size})">
        <constraints nullable="false"/>
      </column>
      <column name="contenttype" type="varchar(80)"/>
      <column name="filesize" type="bigint">
        <constraints nullable="false"/>
      </column>
      <column name="datasetid" type="varchar(${uniqueid.size})">
        <constraints nullable="false"/>
      </column>
      <column name="uploadtime" type="datetime">
        <constraints nullable="false"/>
      </column>
      <column name="counttests" type="int" defaultValueNumeric="0">
        <constraints nullable="false"/>
      </column>
      <column name="countfailures" type="int" defaultValueNumeric="0">
        <constraints nullable="false"/>
      </column>
    </createTable>

    <createIndex indexName="idx_datasetid"
        tableName="editions"
        unique="false">
      <column name="datasetid"/>
    </createIndex>
  </changeSet>

  <changeSet id="rev-2" author="roug">
    <comment>Authorisations</comment>
    <createTable tableName="users">
      <column name="username" type="varchar(${userid.size})">
        <constraints nullable="false" primaryKey="true"/>
      </column>
      <column name="password" type="varchar(40)"/>
      <column name="enabled" type="boolean"/>
    </createTable>

    <createTable tableName="authorities">
      <column name="username" type="varchar(${userid.size})">
        <constraints nullable="false" primaryKey="true"/>
      </column>
      <column name="authority" type="varchar(40)">
        <constraints nullable="false" primaryKey="true"/>
      </column>
    </createTable>
  </changeSet>

  <changeSet id="rev-3" author="roug">
    <comment>Tests on datasets</comment>
    <createTable tableName="qatests">
      <column name="testid" type="int" autoIncrement="true">
        <constraints nullable="false" primaryKey="true"/>
      </column>
      <column name="datasetid" type="varchar(${uniqueid.size})">
        <constraints nullable="false"/>
      </column>
      <column name="testtype" type="varchar(20)">
        <constraints nullable="false"/>
      </column>
      <column name="query" type="text">
        <constraints nullable="false"/>
      </column>
      <column name="expectedresult" type="text"/>
    </createTable>

    <addForeignKeyConstraint
        constraintName="fk_editions_datasetid"
        baseTableName="qatests"
        baseColumnNames="datasetid"
        referencedTableName="editions"
        referencedColumnNames="datasetid"
        onDelete="CASCADE" onUpdate="CASCADE"/>

    <createTable tableName="testresults">
      <column name="testid" type="int" autoIncrement="true">
        <constraints nullable="false" primaryKey="true"/>
      </column>
      <column name="editionid" type="varchar(${uniqueid.size})">
        <constraints nullable="false" primaryKey="true"/>
      </column>
      <column name="passed" type="boolean" remarks="True if test passed">
        <constraints nullable="false"/>
      </column>
      <column name="testran" type="datetime">
        <constraints nullable="false"/>
      </column>
      <column name="result" type="text">
        <constraints nullable="false"/>
      </column>
    </createTable>
  </changeSet>

  <changeSet id="rev-4" author="roug">
    <comment>Create a table to store API keys to be used authentication for external end points.
      Table will have following fields:
      - IDENTIFIER: a unique identifier for the api key
      - SCOPE: a free format scope field (e.g. vocabulary, dataelements)
      - KEY_VALUE: a value for api key (expected to be unique)
      - REMOTE_ADDR: remote host address or ip address (if applicable)
      - EXPIRES: API expiration date (if applicable)
      - NOTES: notes for admin
    </comment>
    <createTable tableName="apikeys">
      <column name="identifier" type="varchar(100)">
        <constraints nullable="false" unique="true"/>
      </column>
      <column name="scope" type="varchar(100)"/>
      <column name="key_value" type="varchar(255)">
        <constraints nullable="false" unique="true"/>
      </column>
      <column name="remote_addr" type="varchar(64)"/>
      <column name="expires" type="datetime"/>
      <column name="notes" type="varchar(255)"/>
    </createTable>
  </changeSet>

</databaseChangeLog>
